
#include<bits/stdc++.h>
using namespace std;
#define lli long long int
#define ulli unsigned long long int
#define MOD 1000000007
int maxSubarraySumKadaneAlgo(int* arr, int n){//n
    int currsum=0, maxsum= INT_MIN;
    for(int i=0;i<=n-1;i++){
        currsum += arr[i];
        maxsum= max(maxsum, currsum);
        if(currsum<0){
            currsum=0;
        }
    }

    return maxsum;
}

int maxSubarraySumPrefixSumArray(int* arr,int n){//n^2, o(n)
    int maxSum= INT_MIN, start, end;
    
    int prefix[n];
    prefix[0]= arr[0];
    //build prefix sum array-> o(n)
    for(int i=1;i<=n-1;i++){
        prefix[i]= prefix[i-1] + arr[i];
    }

    //max sum subarray-> o(n^2)
    int currsum;
    for(int i=0;i<=n-1;i++){
        for(int j=i;j<=n-1;j++){
            if(i!=0){
                currsum= prefix[j] - prefix[i-1];
            }
            else{
                currsum= prefix[j];
            }

            maxSum= max(maxSum, currsum);
            
        }
    }

    return maxSum;

}

int maxSubarraySumPrefixSumVar(int* arr,int n){//n^2, o(1)
    int maxSum= INT_MIN, start, end;
    
    for(int i=0;i<=n-1;i++){
        int sum=0;
        for(int j=i;j<=n-1;j++){
            sum += arr[j];
            maxSum= max(maxSum, sum);
        }
    }

    return maxSum;

}

int maxSubarraySum(int* arr,int n){//n^3
    int maxSum= INT_MIN, start, end;
    for(int i=0;i<=n-1;i++){
        for(int j=i;j<=n-1;j++){
            //iterating over all elements of subarray from i to j to get its sum
            int sum=0;
            for(int k=i;k<=j;k++){
                sum += arr[k];
                //cout<<arr[k]<<", ";
            }
            //cout<<endl;
            maxSum= max(maxSum, sum);

            //to get indices of max sum subarray
            // if(sum > maxSum){
            //     maxSum= sum;
            //     start= i; end= j;
            // }
        }
    }

    return maxSum;

}

int main()
{
            
                int n;
                cin>>n;
                int arr[n];
                for(int i=0;i<n;i++){
                    cin>>arr[i];
                }

                cout<<maxSubarraySum(arr,n)<<endl;//n^3
                cout<<maxSubarraySumPrefixSumVar(arr,n)<<endl;//n^2, o(1)
                cout<<maxSubarraySumPrefixSumArray(arr,n)<<endl;//n^2, o(n)
                 cout<<maxSubarraySumKadaneAlgo(arr,n)<<endl;//n


                

}



